<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Erthad's blog]]></title>
  <link href="http://erthad.name/atom.xml" rel="self"/>
  <link href="http://erthad.name/"/>
  <updated>2013-08-22T09:47:08+04:00</updated>
  <id>http://erthad.name/</id>
  <author>
    <name><![CDATA[Timur Batyrshin]]></name>
    <email><![CDATA[erthad@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Разворачивание скриптов]]></title>
    <link href="http://erthad.name/blog/2013/08/22/razvorachivaniie-skriptov/"/>
    <updated>2013-08-22T08:45:00+04:00</updated>
    <id>http://erthad.name/blog/2013/08/22/razvorachivaniie-skriptov</id>
    <content type="html"><![CDATA[<p>Часто бывает нужно развернуть на удаленный хост (управляемый при помощи chef) какие-то скрипты.
Это не проблема, но не менее часто в этих скриптах бывают нужны привязки конкретно к этому хосту.
Можно, конечно, реализовать обработку параметров командной строки или загрузку данных из конфига,
но первое добавляет кучу кода в скрипт и часто неудобно само по себе (нам нужно будет передать при
каждом запуске скрипта, скажем, с пяток некоротких параметров, причем каждый раз одинаковых), а
загрузка данных из конфига неудобна тем, что приходится обрабатывать случаи, когда конфиг не найден,
какие-то параметры не задали и т.д., что тоже не всегда оправдано.</p>

<p>К примеру, допустим, шеф у нас кладет на хост такой скрипт:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">#!/bin/sh</span>
</span><span class='line'>
</span><span class='line'>usage<span class="o">(){</span>
</span><span class='line'> <span class="nb">echo</span> <span class="s2">&quot;Usage: $(basename &quot;</span><span class="nv">$0</span><span class="s2">&quot;) SITE&quot;</span>
</span><span class='line'> <span class="nb">exit </span>1
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="nv">SITE</span><span class="o">=</span><span class="s2">&quot;$1&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="o">[</span> -z <span class="s2">&quot;${SITE}&quot;</span> <span class="o">]</span> <span class="o">&amp;&amp;</span> usage
</span><span class='line'>
</span><span class='line'>mkdir <span class="s2">&quot;/var/www/${SITE}&quot;</span>
</span><span class='line'>cat /etc/sitecfg/site.template | sed <span class="s2">&quot;s,@NAME@,${SITE},g&quot;</span> &gt; <span class="s2">&quot;/etc/nginx/sites-available/${SITE}&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>В этом скрипте хочется выделить в отдельные переменные несколько частей:</p>

<ul>
<li>путь к каталогам с сайтами (<code>/var/www</code>)</li>
<li>имя темплейта (<code>/etc/sitecfg/site.template</code>)</li>
<li>путь, куда мы кладем обработанный темплейт (<code>/etc/nginx/sites-available</code>)</li>
<li>возможно, еще строку замены (<code>s,@NAME@,${SITE},g</code>)</li>
</ul>


<p>Ясно, что все эти переменные передавать через командную строку не будешь, как не будешь и создавать отдельный
конфиг для их хранения. При этом, для них лучше задать именно переменные, т.к., например, мы можем решить хранить
сайты не в <code>/var/www</code>, а в <code>/var/www/sites</code>, назвать темплейт более внятным именем и положить в более правильное место
и т.д.</p>

<p>Чтобы решить эту задачу, мы пишем скрипт как обычно, но в виде ERB-шаблона. Все нужные нам параметры
придут от Chef-а. Первое желание написать его так:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">#!/bin/sh</span>
</span><span class='line'>
</span><span class='line'>usage<span class="o">(){</span>
</span><span class='line'> <span class="nb">echo</span> <span class="s2">&quot;Usage: $(basename &quot;</span><span class="nv">$0</span><span class="s2">&quot;) SITE&quot;</span>
</span><span class='line'> <span class="nb">exit </span>1
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="nv">SITE</span><span class="o">=</span><span class="s2">&quot;$1&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="o">[</span> -z <span class="s2">&quot;${SITE}&quot;</span> <span class="o">]</span> <span class="o">&amp;&amp;</span> usage
</span><span class='line'>
</span><span class='line'>mkdir <span class="s2">&quot;&lt;%= @sites_path %&gt;/${SITE}&quot;</span>
</span><span class='line'>cat <span class="s2">&quot;&lt;%= @site_template %&gt;&quot;</span> | sed <span class="s2">&quot;&lt;%= @subst_string %&gt; &gt; &quot;</span>&lt;%<span class="o">=</span> @site_cfg_path %&gt;/<span class="k">${</span><span class="nv">SITE</span><span class="k">}</span><span class="err">&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Казалось бы, все нормально, однако легко заметить, что такие конструкции как минимум, нелегко читать, а значит легко допустить
опечатку. Попробуйте найти, в каком месте я здесь забыл кавычку.</p>

<p>Перепишем таким образом:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">#!/bin/sh</span>
</span><span class='line'>
</span><span class='line'><span class="c"># Generated by Chef for &lt;%= node[&#39;fqdn&#39;] %&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nv">SITES_PATH</span><span class="o">=</span><span class="s2">&quot;&lt;%= @sites_path %&gt;&quot;</span>
</span><span class='line'><span class="nv">SITE_TEMPLATE</span><span class="o">=</span><span class="s2">&quot;&lt;%= @site_template %&gt;&quot;</span>
</span><span class='line'><span class="nv">SUBST_STRING</span><span class="o">=</span><span class="s2">&quot;&lt;%= @subst_string %&gt;&quot;</span>
</span><span class='line'><span class="nv">SITE_CFG_PATH</span><span class="o">=</span><span class="s2">&quot;&lt;%= @site_cfg_path %&gt;&quot;</span>
</span><span class='line'>
</span><span class='line'>usage<span class="o">(){</span>
</span><span class='line'> <span class="nb">echo</span> <span class="s2">&quot;Usage: $(basename &quot;</span><span class="nv">$0</span><span class="s2">&quot;) SITE&quot;</span>
</span><span class='line'> <span class="nb">exit </span>1
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="nv">SITE</span><span class="o">=</span><span class="s2">&quot;$1&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="o">[</span> -z <span class="s2">&quot;${SITE}&quot;</span> <span class="o">]</span> <span class="o">&amp;&amp;</span> usage
</span><span class='line'>
</span><span class='line'>mkdir <span class="s2">&quot;${SITES_PATH}/${SITE}&quot;</span>
</span><span class='line'>cat <span class="s2">&quot;${SITE_TEMPLATE}&quot;</span> | sed <span class="s2">&quot;${SUBST_STRING}&quot;</span> &gt; <span class="s2">&quot;${SITE_CFG_PATH}/${SITE}&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>В результате получим довольно аккуратный скрипт, который легко читать и отлаживать.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Сокращение параметров командной строки]]></title>
    <link href="http://erthad.name/blog/2013/08/20/sokrashchieniie-paramietrov/"/>
    <updated>2013-08-20T11:46:00+04:00</updated>
    <id>http://erthad.name/blog/2013/08/20/sokrashchieniie-paramietrov</id>
    <content type="html"><![CDATA[<p>Бывает, при использовании какой-либо команды постоянно нужно бывает передавать ей длинные параметры.</p>

<p>Например:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>aws din --region<span class="o">=</span>eu
</span><span class='line'>aws din --region<span class="o">=</span>ap
</span><span class='line'>aws start i-39b17e77 --region<span class="o">=</span>us
</span></code></pre></td></tr></table></div></figure>


<p>Можно создать алиасы, но это не всегда бывает применимо &mdash; например, в случае когда команда не принимает параметры
до операции, алиас создать не так просто.</p>

<p>Выход такой: свернем параметр до переменной:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">export </span><span class="nv">EU</span><span class="o">=</span><span class="s2">&quot;--region=eu&quot;</span>
</span><span class='line'><span class="nb">export </span><span class="nv">AP</span><span class="o">=</span><span class="s2">&quot;--region=ap&quot;</span>
</span><span class='line'><span class="nb">export </span><span class="nv">US</span><span class="o">=</span><span class="s2">&quot;--region=us&quot;</span>
</span><span class='line'>
</span><span class='line'>aws din <span class="nv">$EU</span>
</span><span class='line'>aws din <span class="nv">$AP</span>
</span><span class='line'>aws start i-39b17e77 <span class="nv">$US</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Testing Octopress]]></title>
    <link href="http://erthad.name/blog/2013/08/20/testing-octopress/"/>
    <updated>2013-08-20T11:29:00+04:00</updated>
    <id>http://erthad.name/blog/2013/08/20/testing-octopress</id>
    <content type="html"><![CDATA[<p>Вот я и добрался до создания своего технического блога. Посмотрим, как дальше пойдут дела.</p>
]]></content>
  </entry>
  
</feed>
